# Pre-commit hooks configuration
# Install with: pip install pre-commit && pre-commit install

repos:
  # Basic checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-json
      - id: check-toml
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: debug-statements
      - id: detect-private-key

  # Python code formatting
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        args: [--line-length=127]
        files: ^server/src/.*\.py$

  # Import sorting
  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: [--profile=black, --line-length=127]
        files: ^server/src/.*\.py$

  # Code quality check
  - repo: https://github.com/pycqa/flake8
    rev: 7.0.0
    hooks:
      - id: flake8
        args: [--max-line-length=127, --extend-ignore=E203]
        files: ^server/src/.*\.py$

  # Security check
  - repo: https://github.com/pycqa/bandit
    rev: 1.7.9
    hooks:
      - id: bandit
        name: bandit
        args: ["-r", "server/src", "-f", "txt"]
        files: ^server/src/.*\.py$
        pass_filenames: false

  # Docker file check
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker
        files: ^server/Dockerfile$

  # YAML file check
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.35.1
    hooks:
      - id: yamllint
        args: [-d, relaxed]

  # Commit message check (optional)
  - repo: https://github.com/compilerla/conventional-pre-commit
    rev: v3.0.0
    hooks:
      - id: conventional-pre-commit
        stages: [commit-msg]
        args: [optional-scope]

  # Local check - only run when there is a corresponding tool
  - repo: local
    hooks:
      - id: pytest-check
        name: pytest-check
        entry: bash -c 'cd server && if command -v python3 >/dev/null 2>&1; then python3 -m pytest test/ --tb=short -q || true; else echo "pytest skipped - python not available"; fi'
        language: system
        files: ^server/(src|test)/.*\.py$
        pass_filenames: false
